test compile precise-output
set unwind_info=false
target riscv64 has_v


function %nearest_f32x4(f32x4) -> f32x4 {
block0(v0: f32x4):
    v1 = nearest v0
    return v1
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v1,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   vfabs.v v4,v1 #avl=4, #vtype=(e32, m1, ta, ma)
;   lui a3,307200
;   fmv.w.x fa0,a3
;   vmflt.vf v0,v4,fa0 #avl=4, #vtype=(e32, m1, ta, ma)
;   fsrmi t4,0
;   vfcvt.x.f.v v14,v1 #avl=4, #vtype=(e32, m1, ta, ma)
;   fsrm t4
;   vfcvt.f.x.v v17,v14 #avl=4, #vtype=(e32, m1, ta, ma)
;   vfsgnj.vv v19,v17,v1 #avl=4, #vtype=(e32, m1, ta, ma)
;   fmv.w.x ft1,zero
;   vfadd.vf v23,v1,ft1 #avl=4, #vtype=(e32, m1, ta, ma)
;   vmerge.vvm v25,v23,v19,v0.t #avl=4, #vtype=(e32, m1, ta, ma)
;   vse8.v v25,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   ori s0, sp, 0
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, s0, 0x10
;   .byte 0x87, 0x80, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x02, 0xcd
;   .byte 0x57, 0x92, 0x10, 0x2a
;   lui a3, 0x4b000
;   fmv.w.x fa0, a3
;   .byte 0x57, 0x50, 0x45, 0x6e
;   fsrmi t4, 0
;   .byte 0x57, 0x97, 0x10, 0x4a
;   fsrm t4
;   .byte 0xd7, 0x98, 0xe1, 0x4a
;   .byte 0xd7, 0x99, 0x10, 0x23
;   fmv.w.x ft1, zero
;   .byte 0xd7, 0xdb, 0x10, 0x02
;   .byte 0xd7, 0x8c, 0x79, 0x5d
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0xa7, 0x0c, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret

function %nearest_f64x2(f64x2) -> f64x2 {
block0(v0: f64x2):
    v1 = nearest v0
    return v1
}

; VCode:
;   add sp,-16
;   sd ra,8(sp)
;   sd fp,0(sp)
;   mv fp,sp
; block0:
;   vle8.v v1,16(fp) #avl=16, #vtype=(e8, m1, ta, ma)
;   vfabs.v v4,v1 #avl=2, #vtype=(e64, m1, ta, ma)
;   ld a3,[const(0)]
;   fmv.d.x fa0,a3
;   vmflt.vf v0,v4,fa0 #avl=2, #vtype=(e64, m1, ta, ma)
;   fsrmi t4,0
;   vfcvt.x.f.v v14,v1 #avl=2, #vtype=(e64, m1, ta, ma)
;   fsrm t4
;   vfcvt.f.x.v v17,v14 #avl=2, #vtype=(e64, m1, ta, ma)
;   vfsgnj.vv v19,v17,v1 #avl=2, #vtype=(e64, m1, ta, ma)
;   fmv.d.x ft1,zero
;   vfadd.vf v23,v1,ft1 #avl=2, #vtype=(e64, m1, ta, ma)
;   vmerge.vvm v25,v23,v19,v0.t #avl=2, #vtype=(e64, m1, ta, ma)
;   vse8.v v25,0(a0) #avl=16, #vtype=(e8, m1, ta, ma)
;   ld ra,8(sp)
;   ld fp,0(sp)
;   add sp,+16
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   addi sp, sp, -0x10
;   sd ra, 8(sp)
;   sd s0, 0(sp)
;   ori s0, sp, 0
; block1: ; offset 0x10
;   .byte 0x57, 0x70, 0x08, 0xcc
;   addi t6, s0, 0x10
;   .byte 0x87, 0x80, 0x0f, 0x02
;   .byte 0x57, 0x70, 0x81, 0xcd
;   .byte 0x57, 0x92, 0x10, 0x2a
;   auipc t6, 0
;   addi t6, t6, 0x4c
;   ld a3, 0(t6)
;   fmv.d.x fa0, a3
;   .byte 0x57, 0x50, 0x45, 0x6e
;   fsrmi t4, 0
;   .byte 0x57, 0x97, 0x10, 0x4a
;   fsrm t4
;   .byte 0xd7, 0x98, 0xe1, 0x4a
;   .byte 0xd7, 0x99, 0x10, 0x23
;   fmv.d.x ft1, zero
;   .byte 0xd7, 0xdb, 0x10, 0x02
;   .byte 0xd7, 0x8c, 0x79, 0x5d
;   .byte 0x57, 0x70, 0x08, 0xcc
;   .byte 0xa7, 0x0c, 0x05, 0x02
;   ld ra, 8(sp)
;   ld s0, 0(sp)
;   addi sp, sp, 0x10
;   ret
;   .byte 0x00, 0x00, 0x00, 0x00
;   .byte 0x00, 0x00, 0x30, 0x43

