// The `wasi:http/outgoing-handler` interface is meant to be imported by
// components and implemented by the host.
//
//   NOTE: in Preview3, this interface will be merged with
//   `wasi:http/outgoing-handler` into a single `wasi:http/handler` interface
//   that takes a `request` parameter and returns a `response` result.
//
interface outgoing-handler {
  use types.{outgoing-request, request-options, future-incoming-response}

  // FIXME: we would want to use the types.error here but there is a
  // wasmtime-wit-bindgen bug that prevents us from using the same error in
  // the two different interfaces, right now...
  variant error {
    invalid(string)
  }

  // The parameter and result types of the `handle` function allow the caller
  // to concurrently stream the bodies of the outgoing request and the incoming
  // response.
  // Consumes the outgoing-request. Gives an error if the outgoing-request
  // is invalid or cannot be satisfied by this handler.
  handle: func(
    request: /* own */ outgoing-request,
    options: option<request-options>
  ) -> result<future-incoming-response, error>
}
